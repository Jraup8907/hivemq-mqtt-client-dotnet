"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[109],{5117:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var n=t(5893),i=t(1151);const r={},c="Subscribe",o={id:"how-to/subscribe",title:"Subscribe",description:"You can subscribe to one or many topics in MQTT.  But to do so, you must first set a message handler.",source:"@site/docs/how-to/subscribe.md",sourceDirName:"how-to",slug:"/how-to/subscribe",permalink:"/hivemq-mqtt-client-dotnet/docs/how-to/subscribe",draft:!1,unlisted:!1,editUrl:"https://github.com/hivemq/hivemq-mqtt-client-dotnet/tree/main/Documentation/docs/how-to/subscribe.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Subscribe to Multiple Topics At Once With Varying QoS Levels",permalink:"/hivemq-mqtt-client-dotnet/docs/how-to/subscribe-multi"},next:{title:"Wait on an Event",permalink:"/hivemq-mqtt-client-dotnet/docs/how-to/wait-on-event"}},a={},l=[];function d(e){const s={a:"a",code:"code",em:"em",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"subscribe",children:"Subscribe"}),"\n",(0,n.jsx)(s.h1,{id:"set-your-message-handlers-first",children:"Set Your Message Handlers First"}),"\n",(0,n.jsx)(s.p,{children:"You can subscribe to one or many topics in MQTT.  But to do so, you must first set a message handler."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.em,{children:"Tip: Set your message handler before connecting to the MQTT broker as it may send messages before your handler is setup!"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-csharp",children:'// Message Handler\nclient.OnMessageReceived += (sender, args) =>\n{\n    Console.WriteLine("Message Received: {}", args.PublishMessage.PayloadAsString)\n};\n'})}),"\n",(0,n.jsx)(s.p,{children:"or alternatively:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-csharp",children:'private static void MessageHandler(object? sender, OnMessageReceivedEventArgs eventArgs)\n{\n    Console.WriteLine("Message Received: {}", eventArgs.PublishMessage.PayloadAsString)\n}\n\nclient.OnMessageReceived += MessageHandler;\n'})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["See: ",(0,n.jsx)(s.a,{href:"https://github.com/hivemq/hivemq-mqtt-client-dotnet/blob/main/Source/HiveMQtt/Client/Events/OnMessageReceivedEventArgs.cs",children:"OnMessageReceivedEventArgs"})]}),"\n"]}),"\n",(0,n.jsx)(s.h1,{id:"basic",children:"Basic"}),"\n",(0,n.jsxs)(s.p,{children:["To subscribe to a single topic with a Quality of Service level, use ",(0,n.jsx)(s.code,{children:"SubscribeAsync"})," as follows."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-csharp",children:'// Subscribe\nvar subscribeResult = await client.SubscribeAsync("instrument/x9284/boston", QualityOfService.AtLeastOnceDelivery).ConfigureAwait(false);\n\nassert subscribeResult.Subscriptions.Length() == 1\nassert subscribeResult.Subscriptions[0].SubscribeReasonCode == SubAckReasonCode.GrantedQoS1\n'})}),"\n",(0,n.jsxs)(s.h1,{id:"using-subscribeoptions",children:["Using ",(0,n.jsx)(s.code,{children:"SubscribeOptions"})]}),"\n",(0,n.jsxs)(s.p,{children:["To utilize the complete set of options for ",(0,n.jsx)(s.code,{children:"SubscribeAsync"}),", create a ",(0,n.jsx)(s.code,{children:"SubscribeOptions"})," object."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-csharp",children:'var topic1 = "instrument/x9284/boston"\nvar topic2 = "instrument/x9284/austin"\nvar qos = QualityOfService.AtLeastOnceDelivery;\n\nvar subscribeOptions = new SubscribeOptions();\n\nvar tf1 = new TopicFilter(topic1, qos);\nvar tf2 = new TopicFilter(topic2, qos);\n\nsubscribeOptions.TopicFilters.Add(tf1);\nsubscribeOptions.TopicFilters.Add(tf2);\n\nsubscribeOptions.UserProperties.Add("Client-Geo", "-33.8688, 151.2093");\n\nvar result = await client.SubscribeAsync(subscribeOptions).ConfigureAwait(false);\n'})}),"\n",(0,n.jsx)(s.h1,{id:"see-also",children:"See Also"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://github.com/hivemq/hivemq-mqtt-client-dotnet/blob/main/Source/HiveMQtt/MQTT5/Types/TopicFilter.cs",children:"TopicFilter"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://github.com/hivemq/hivemq-mqtt-client-dotnet/blob/main/Source/HiveMQtt/Client/Options/SubscribeOptions.cs",children:"SubscribeOptions"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://github.com/hivemq/hivemq-mqtt-client-dotnet/blob/main/Source/HiveMQtt/Client/Results/SubscribeResult.cs",children:"SubscribeResult"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://www.hivemq.com/blog/mqtt-essentials-part-5-mqtt-topics-best-practices/",children:"MQTT Topics, Wildcards, & Best Practices"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://www.hivemq.com/article/mqtt-topic-tree-matching-challenges-best-practices-explained/",children:"MQTT Topic Tree & Topic Matching"})}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>o,a:()=>c});var n=t(7294);const i={},r=n.createContext(i);function c(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);