"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[310],{5001:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>l,toc:()=>s});var i=n(5893),o=n(1151);const c={},r="Configure HiveMQtt Logging",l={id:"how-to/configure-logging",title:"Configure HiveMQtt Logging",description:"The HiveMQtt package uses NLog and can be configured with a configuration file (NLog.config).  Having this file in the same directory of your executable will configure the HiveMQtt logger to output as configured:",source:"@site/docs/how-to/configure-logging.md",sourceDirName:"how-to",slug:"/how-to/configure-logging",permalink:"/hivemq-mqtt-client-dotnet/docs/how-to/configure-logging",draft:!1,unlisted:!1,editUrl:"https://github.com/hivemq/hivemq-mqtt-client-dotnet/tree/main/Documentation/docs/how-to/configure-logging.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Connect with TLS but allow Invalid TLS Certificates",permalink:"/hivemq-mqtt-client-dotnet/docs/how-to/allow-invalid-certs"},next:{title:"Securely Connect to a Broker with Basic Authentication Credentials",permalink:"/hivemq-mqtt-client-dotnet/docs/how-to/connect-with-auth"}},a={},s=[];function g(e){const t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"configure-hivemqtt-logging",children:"Configure HiveMQtt Logging"}),"\n",(0,i.jsxs)(t.p,{children:["The HiveMQtt package uses ",(0,i.jsx)(t.a,{href:"https://github.com/NLog/NLog",children:"NLog"})," and can be configured with a configuration file (",(0,i.jsx)(t.code,{children:"NLog.config"}),").  Having this file in the same directory of your executable will configure the HiveMQtt logger to output as configured:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<?xml version="1.0" encoding="utf-8" ?>\n<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"\n      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n\n  <targets>\n    <target name="logfile" xsi:type="File" fileName="HiveMQtt.log" />\n    <target name="logconsole" xsi:type="Console" />\n  </targets>\n\n  <rules>\n     \x3c!-- minlevel can be Debug, Info, Warn, Error and Fatal or Trace --\x3e\n    <logger name="HiveMQtt.*" minlevel="Error" writeTo="logconsole" />\n  </rules>\n</nlog>\n\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Setting ",(0,i.jsx)(t.code,{children:"minlevel"})," to ",(0,i.jsx)(t.code,{children:"Trace"})," will output all activity in the HiveMQtt package down to packet and event handling.  Using this level will produce a lot of output such as the following:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-log",children:"2023-10-04 16:56:54.9373|TRACE|HiveMQtt.Client.HiveMQClient|BeforeConnectEventLauncher\n2023-10-04 16:56:55.0081|TRACE|HiveMQtt.Client.HiveMQClient|7: TrafficInflowProcessor Starting...Connecting\n2023-10-04 16:56:55.0081|TRACE|HiveMQtt.Client.HiveMQClient|9: TrafficOutflowProcessor Starting...Connecting\n2023-10-04 16:56:55.0081|TRACE|HiveMQtt.Client.HiveMQClient|--\x3e ConnectPacket\n2023-10-04 16:56:55.0128|TRACE|HiveMQtt.Client.HiveMQClient|OnConnectSentEventLauncher\n2023-10-04 16:56:55.0374|TRACE|HiveMQtt.Client.HiveMQClient|<-- ConnAck\n2023-10-04 16:56:55.0374|TRACE|HiveMQtt.Client.HiveMQClient|OnConnAckReceivedEventLauncher\n2023-10-04 16:56:55.0379|TRACE|HiveMQtt.Client.HiveMQClient|AfterConnectEventLauncher\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>r});var i=n(7294);const o={},c=i.createContext(o);function r(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);